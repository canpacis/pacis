{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "sheet",
  "type": "registry:ui",
  "title": "Sheet",
  "description": "Extends the Dialog component to display content that complements the main content of the screen.",
  "files": [
    {
      "path": "registry/ui/sheet/sheet.go",
      "content": "package sheet\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/canpacis/pacis/components\"\n\t\"github.com/canpacis/pacis/html\"\n\t\"github.com/canpacis/pacis/lucide\"\n\t\"github.com/canpacis/pacis/x\"\n)\n\nfunc New(items ...html.Item) html.Node {\n\treturn html.Div(\n\t\tcomponents.ItemsOf(\n\t\t\titems,\n\t\t\tx.Data(\"sheet\"),\n\t\t\tx.Ref(\"sheetroot\"),\n\t\t\thtml.Data(\"slot\", \"sheet\"),\n\t\t)...,\n\t)\n}\n\nfunc Trigger(items ...html.Item) html.Node {\n\treturn html.Button(\n\t\tcomponents.ItemsOf(\n\t\t\titems,\n\n\t\t\tOpen,\n\n\t\t\tx.Bind(\"aria-expanded\", \"opened\"),\n\t\t\tx.Bind(\"data-state\", \"opened ? 'open' : 'closed'\"),\n\n\t\t\thtml.Type(\"button\"),\n\t\t\thtml.Data(\"slot\", \"sheet-trigger\"),\n\t\t\thtml.Aria(\"haspopup\", \"dialog\"),\n\t\t)...,\n\t)\n}\n\nfunc Overlay() html.Node {\n\treturn html.Div(\n\t\tx.Show(\"opened\"),\n\t\tClose,\n\t\tx.Bind(\"data-state\", \"opened ? 'open' : 'closed'\"),\n\t\thtml.Data(\"slot\", \"sheet-overlay\"),\n\t\thtml.Data(\"aria-hidden\", \"true\"),\n\t\thtml.Aria(\"hidden\", \"true\"),\n\t\thtml.Attr(\"x-transition:enter\", \"transition-opacity duration-150\"),\n\t\thtml.Attr(\"x-transition:enter-start\", \"opacity-0\"),\n\t\thtml.Attr(\"x-transition:enter-end\", \"opacity-100\"),\n\t\thtml.Attr(\"x-transition:leave\", \"transition-opacity duration-150 delay-100\"),\n\t\thtml.Attr(\"x-transition:leave-start\", \"opacity-100\"),\n\t\thtml.Attr(\"x-transition:leave-end\", \"opacity-0\"),\n\t\thtml.Class(\"fixed inset-0 z-50 bg-black/50\"),\n\t)\n}\n\ntype Side = components.Variant\n\nconst (\n\tTop = Side(iota)\n\tBottom\n\tLeft\n\tRight\n)\n\nvar side = components.NewVariantApplier(func(el *html.Element, v components.Variant) {\n\tswitch v {\n\tcase Top:\n\t\tel.AddClass(\"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\")\n\t\tel.SetAttribute(\"x-transition:enter-start\", \"-translate-y-full\")\n\t\tel.SetAttribute(\"x-transition:enter-end\", \"translate-y-0\")\n\t\tel.SetAttribute(\"x-transition:leave-start\", \"translate-y-0\")\n\t\tel.SetAttribute(\"x-transition:leave-end\", \"-translate-y-full\")\n\tcase Bottom:\n\t\tel.AddClass(\"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\")\n\t\tel.SetAttribute(\"x-transition:enter-start\", \"translate-y-full\")\n\t\tel.SetAttribute(\"x-transition:enter-end\", \"translate-y-0\")\n\t\tel.SetAttribute(\"x-transition:leave-start\", \"translate-y-0\")\n\t\tel.SetAttribute(\"x-transition:leave-end\", \"translate-y-full\")\n\tcase Left:\n\t\tel.AddClass(\"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\")\n\t\tel.SetAttribute(\"x-transition:enter-start\", \"-translate-x-full\")\n\t\tel.SetAttribute(\"x-transition:enter-end\", \"translate-x-0\")\n\t\tel.SetAttribute(\"x-transition:leave-start\", \"translate-x-0\")\n\t\tel.SetAttribute(\"x-transition:leave-end\", \"-translate-x-full\")\n\tcase Right:\n\t\tel.AddClass(\"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\")\n\t\tel.SetAttribute(\"x-transition:enter-start\", \"translate-x-full\")\n\t\tel.SetAttribute(\"x-transition:enter-end\", \"translate-x-0\")\n\t\tel.SetAttribute(\"x-transition:leave-start\", \"translate-x-0\")\n\t\tel.SetAttribute(\"x-transition:leave-end\", \"translate-x-full\")\n\tdefault:\n\t\tpanic(fmt.Sprintf(\"invalid sheet side variant: %d\", v))\n\t}\n})\n\nfunc Content(items ...html.Item) html.Node {\n\titems = components.ItemsOf(\n\t\titems,\n\t\tx.Show(\"opened\"),\n\t\tx.Bind(\"data-state\", \"opened ? 'open' : 'closed'\"),\n\n\t\thtml.Data(\"slot\", \"sheet-content\"),\n\t\thtml.Attr(\"x-trap.noscroll\", \"opened\"),\n\t\thtml.Role(\"dialog\"),\n\t\thtml.Attr(\"x-transition:enter\", \"transition duration-500\"),\n\t\thtml.Attr(\"x-transition:leave\", \"transition duration-300\"),\n\t\thtml.Class(\"fixed flex flex-col z-50 gap-4 bg-background shadow-lg\"),\n\t\tRight,\n\t\tside,\n\t)\n\titems = append(items, html.Button(\n\t\tClose,\n\t\thtml.Tabindex(\"-1\"),\n\t\thtml.Type(\"button\"),\n\t\thtml.Data(\"slot\", \"sheet-close\"),\n\t\thtml.Class(\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\"),\n\n\t\tlucide.X(html.Class(\"h-4 w-4\")),\n\t\thtml.Span(html.Class(\"sr-only\"), html.Text(\"Close\")),\n\t))\n\n\treturn html.Template(\n\t\tx.Teleport(\"body\"),\n\n\t\thtml.Div(\n\t\t\tOverlay(),\n\t\t\thtml.Div(items...),\n\t\t),\n\t)\n}\n\nfunc Header(items ...html.Item) html.Node {\n\treturn html.Div(\n\t\tcomponents.ItemsOf(\n\t\t\titems,\n\t\t\thtml.Data(\"slot\", \"sheet-header\"),\n\t\t\thtml.Class(\"flex flex-col space-y-2 text-center sm:text-left p-4\"),\n\t\t)...,\n\t)\n}\n\nfunc Footer(items ...html.Item) html.Node {\n\treturn html.Div(\n\t\tcomponents.ItemsOf(\n\t\t\titems,\n\t\t\thtml.Data(\"slot\", \"sheet-footer\"),\n\t\t\thtml.Class(\"mt-auto flex flex-col gap-2 p-4\"),\n\t\t)...,\n\t)\n}\n\nfunc Title(items ...html.Item) html.Node {\n\treturn html.H2(\n\t\tcomponents.ItemsOf(\n\t\t\titems,\n\t\t\thtml.Data(\"slot\", \"sheet-title\"),\n\t\t\thtml.Class(\"text-lg font-semibold text-foreground\"),\n\t\t)...,\n\t)\n}\n\nfunc Description(items ...html.Item) html.Node {\n\treturn html.P(\n\t\tcomponents.ItemsOf(\n\t\t\titems,\n\t\t\thtml.Data(\"slot\", \"sheet-description\"),\n\t\t\thtml.Class(\"text-sm text-muted-foreground\"),\n\t\t)...,\n\t)\n}\n\nvar Open = OpenOn(\"click\")\nvar Close = CloseOn(\"click\")\n\nfunc OpenOn(event string) *html.Attribute {\n\treturn html.Attr(\"x-on:\"+event, \"open($refs.sheetroot)\")\n}\n\nfunc CloseOn(event string) *html.Attribute {\n\treturn html.Attr(\"x-on:\"+event, \"close($refs.sheetroot)\")\n}\n",
      "type": "registry:ui",
      "target": "src/components/ui/sheet/sheet.go"
    }
  ]
}