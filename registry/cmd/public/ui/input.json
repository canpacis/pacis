{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "input",
  "type": "registry:ui",
  "title": "Input & Input Group",
  "description": "Display a form input field or a component that looks like an input field with input. Display additional information or actions to an input or textarea with input group.",
  "files": [
    {
      "path": "registry/ui/input/input.go",
      "content": "package input\n\nimport (\n\t\"fmt\"\n\n\t\"components/ui/button\"\n\n\t\"github.com/canpacis/pacis/components\"\n\t\"github.com/canpacis/pacis/html\"\n)\n\nfunc New(items ...html.Item) html.Node {\n\treturn html.Input(\n\t\tcomponents.ItemsOf(\n\t\t\titems,\n\t\t\thtml.Data(\"slot\", \"input\"),\n\t\t\thtml.Class(\"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\"),\n\t\t)...,\n\t)\n}\n\nfunc Group(items ...html.Item) html.Node {\n\treturn html.Div(\n\t\tcomponents.ItemsOf(\n\t\t\titems,\n\t\t\thtml.Data(\"slot\", \"input-group\"),\n\t\t\thtml.Role(\"group\"),\n\t\t\thtml.Class(\"group/input-group border-input dark:bg-input/30 shadow-xs relative flex w-full items-center rounded-md border outline-none transition-[color,box-shadow] h-9 has-[>textarea]:h-auto has-[>[data-align=inline-start]]:[&>input]:pl-2 has-[>[data-align=inline-end]]:[&>input]:pr-2 has-[>[data-align=block-start]]:h-auto has-[>[data-align=block-start]]:flex-col has-[>[data-align=block-start]]:[&>input]:pb-3 has-[>[data-align=block-end]]:h-auto has-[>[data-align=block-end]]:flex-col has-[>[data-align=block-end]]:[&>input]:pt-3 has-[[data-slot=input-group-control]:focus-visible]:ring-ring has-[[data-slot=input-group-control]:focus-visible]:ring-1 has-[[data-slot][aria-invalid=true]]:ring-destructive/20 has-[[data-slot][aria-invalid=true]]:border-destructive dark:has-[[data-slot][aria-invalid=true]]:ring-destructive/40\"),\n\t\t)...,\n\t)\n}\n\ntype AddonAlign = components.Variant\n\nconst (\n\tAddonInlineStart = AddonAlign(iota)\n\tAddonInlineEnd\n\tAddonBlockStart\n\tAddonBlockEnd\n)\n\nvar addon = components.NewVariantApplier(func(el *html.Element, v components.Variant) {\n\tswitch v {\n\tcase AddonInlineStart:\n\t\tel.AddClass(\"order-first pl-3 has-[>button]:ml-[-0.45rem] has-[>kbd]:ml-[-0.35rem]\")\n\t\tel.SetAttribute(\"data-align\", \"inline-start\")\n\tcase AddonInlineEnd:\n\t\tel.AddClass(\"order-last pr-3 has-[>button]:mr-[-0.4rem] has-[>kbd]:mr-[-0.35rem]\")\n\t\tel.SetAttribute(\"data-align\", \"inline-end\")\n\tcase AddonBlockStart:\n\t\tel.AddClass(\"[.border-b]:pb-3 order-first w-full justify-start px-3 pt-3 group-has-[>input]/input-group:pt-2.5\")\n\t\tel.SetAttribute(\"data-align\", \"block-start\")\n\tcase AddonBlockEnd:\n\t\tel.AddClass(\"[.border-t]:pt-3 order-last w-full justify-start px-3 pb-3 group-has-[>input]/input-group:pb-2.5\")\n\t\tel.SetAttribute(\"data-align\", \"block-end\")\n\tdefault:\n\t\tpanic(fmt.Sprintf(\"invalid input group addon align variant: %d\", v))\n\t}\n})\n\nfunc GroupAddon(items ...html.Item) html.Node {\n\treturn html.Div(\n\t\tcomponents.ItemsOf(\n\t\t\titems,\n\t\t\thtml.Data(\"slot\", \"input-group-addon\"),\n\t\t\thtml.Role(\"group\"),\n\t\t\taddon,\n\t\t)...,\n\t)\n}\n\ntype GroupButtonSize = components.Size\n\nconst (\n\tButtonXs = GroupButtonSize(iota)\n\tButtonSm\n\tButtonIconXs\n\tButtonIconSm\n)\n\nvar size = components.NewSizeApplier(func(el *html.Element, s components.Size) {\n\tswitch s {\n\tcase ButtonXs:\n\t\tel.AddClass(\"h-6 gap-1 rounded-[calc(var(--radius)-5px)] px-2 has-[>svg]:px-2 [&>svg:not([class*='size-'])]:size-3.5\")\n\t\tel.SetAttribute(\"data-size\", \"xs\")\n\tcase ButtonSm:\n\t\tel.AddClass(\"h-8 gap-1.5 rounded-md px-2.5 has-[>svg]:px-2.5\")\n\t\tel.SetAttribute(\"data-size\", \"sm\")\n\tcase ButtonIconXs:\n\t\tel.AddClass(\"size-6 rounded-[calc(var(--radius)-5px)] p-0 has-[>svg]:p-0\")\n\t\tel.SetAttribute(\"data-size\", \"icon-xs\")\n\tcase ButtonIconSm:\n\t\tel.AddClass(\"size-8 p-0 has-[>svg]:p-0\")\n\t\tel.SetAttribute(\"data-size\", \"icon-sm\")\n\tdefault:\n\t\tpanic(fmt.Sprintf(\"invalid group button size: %d\", s))\n\t}\n})\n\nfunc GroupButton(items ...html.Item) html.Node {\n\treturn button.New(components.ItemsOf(items, size)...)\n}\n\nfunc GroupText(items ...html.Item) html.Node {\n\treturn html.Span(components.ItemsOf(items, html.Class(\"text-muted-foreground flex items-center gap-2 text-sm [&_svg:not([class*='size-'])]:size-4 [&_svg]:pointer-events-none\"))...)\n}\n\nfunc GroupInput(items ...html.Item) html.Node {\n\treturn New(components.ItemsOf(items, html.Data(\"slot\", \"input-group-control\"), html.Class(\"flex-1 rounded-none border-0 bg-transparent shadow-none focus-visible:ring-0 dark:bg-transparent\"))...)\n}\n\nfunc GroupTextarea(items ...html.Item) html.Node {\n\treturn html.Textarea(\n\t\tcomponents.ItemsOf(\n\t\t\titems,\n\t\t\thtml.Data(\"slot\", \"input-group-control\"),\n\t\t\thtml.Class(\"flex-1 resize-none rounded-none border-0 bg-transparent py-3 shadow-none focus-visible:ring-0 dark:bg-transparent\"),\n\t\t)...,\n\t)\n}\n",
      "type": "registry:ui",
      "target": "src/components/ui/input/input.go"
    }
  ]
}